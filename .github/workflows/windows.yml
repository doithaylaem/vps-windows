name: T·∫°o VPS Windows 6h

on:
  workflow_dispatch:
    inputs:
      os_version:
        description: 'Ch·ªçn phi√™n b·∫£n Windows (windows-2019 ho·∫∑c windows-2022)'
        required: true
        default: 'windows-2019'

jobs:
  build:
    runs-on: ${{ github.event.inputs.os_version }}
    timeout-minutes: 360

    steps:
    - name: T·∫£i ngrok 3.7.0 t·ª´ GitHub (host ph·ª• tr·ª£)
      run: |
        Invoke-WebRequest -Uri "https://raw.githubusercontent.com/hpthanhng/host-ngrok/main/ngrok.exe" -OutFile "ngrok.exe"

    - name: C·∫•u h√¨nh ngrok authtoken
      run: .\ngrok.exe config add-authtoken $env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: M·ªü c·ªïng RDP
      run: |
        net user runneradmin P@ssw0rd!
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0

    - name: Kh·ªüi ƒë·ªông ngrok tunnel
      run: Start-Process -NoNewWindow -FilePath .\ngrok.exe -ArgumentList "tcp 3389"

    - name: Hi·ªÉn th·ªã th√¥ng tin RDP
      run: |
        Start-Sleep -Seconds 20
        $tunnel = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels
        $rdp = ($tunnel.tunnels | Where-Object { $_.proto -eq "tcp" }).public_url
        Write-Output "üåê Ngrok RDP: $rdp"
        Write-Output "üë§ User: runneradmin"
        Write-Output "üîë Password: P@ssw0rd!"

    - name: Gi·ªØ phi√™n ho·∫°t ƒë·ªông 6 gi·ªù
      run: Start-Sleep -Seconds 21600
